// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cflocal/cf/cmd (interfaces: Forwarder)

// Package mocks is a generated GoMock package.
package mocks

import (
	forge "github.com/buildpack/forge/v2"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockForwarder is a mock of Forwarder interface
type MockForwarder struct {
	ctrl     *gomock.Controller
	recorder *MockForwarderMockRecorder
}

// MockForwarderMockRecorder is the mock recorder for MockForwarder
type MockForwarderMockRecorder struct {
	mock *MockForwarder
}

// NewMockForwarder creates a new mock instance
func NewMockForwarder(ctrl *gomock.Controller) *MockForwarder {
	mock := &MockForwarder{ctrl: ctrl}
	mock.recorder = &MockForwarderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockForwarder) EXPECT() *MockForwarderMockRecorder {
	return m.recorder
}

// Forward mocks base method
func (m *MockForwarder) Forward(arg0 *forge.ForwardConfig) (<-chan string, func(), string, error) {
	ret := m.ctrl.Call(m, "Forward", arg0)
	ret0, _ := ret[0].(<-chan string)
	ret1, _ := ret[1].(func())
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// Forward indicates an expected call of Forward
func (mr *MockForwarderMockRecorder) Forward(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Forward", reflect.TypeOf((*MockForwarder)(nil).Forward), arg0)
}
